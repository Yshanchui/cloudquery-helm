apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudquery-metadict-configmap
data:
  application.yml: |
    server:
      port: 9192
      error:
        include-exception: false
        include-stacktrace: always
      servlet:
        context-path: /dict
    
    logging:
      level:
        sql: error
        cn.bintools.metadict: info
    
    spring:
      mvc:
        async:
          request-timeout: -1
      application:
        name:
          cloudquery-MetaDictProd
      datasource:
        url: jdbc:postgresql://cloudquery-postgreSQL:5432/postgres
        username: postgres
        password: WVCmFZs841@
        driver-class-name: org.postgresql.Driver
        hikari:
          pool-name: DictDB-Pool
          maximum-pool-size: 20
          data-source-properties:
            cachePrepStmts: true
            cacheResultSetMetadata: true
            cacheServerConfiguration: true
            elideSetAutoCommits: true
            maintainTimeStats: false
            prepStmtCacheSize: 250
            prepStmtCacheSqlLimit: 2048
            rewriteBatchedStatements: true
            useLocalSessionState: true
            useServerPrepStmts: true
      flyway:
        baselineOnMigrate: true
        enabled: true
        locations: filesystem:./db/migration
      jpa:
        database: postgresql
        properties:
          hibernate:
            search:
              backend:
                analysis:
                  configurer: class:cn.bintools.cloudquery.metadict.services.index.CustomAnalyzer
                directory:
                  root: /opt/cloudquery/LuceneIndexes
                io:
                  writer:
                    ram_buffer_size: 100
                    max_buffered_docs: 1000
                  merge:
                    factor: 10
              automatic_indexing:
                enabled: false
            id:
              sequence:
                increment_size_mismatch_strategy: FIX
            #        order_inserts: true
            dialect: org.hibernate.dialect.PostgreSQL95Dialect
            format_sql: false
            show_sql: false
            jdbc:
              batch_size: 250
              time_zone: Asia/Shanghai
    
        hibernate:
          ddl-auto: validate
        open-in-view: false
    
      redis:
        database: 1
        host: cloudquery-redis
        port: 6379
        password: nya6X#uSes@
    
    dubbo:
      scan:
        base-packages: cn.bintools.cloudquery.metadict
      application:
        id: cloudquery-metadict
        name: cloudquery-metadict
        qos-port: 33444
        qos-enable: true
        qos-accept-foreign-ip: false
      protocol:
        id: metadict
        name: dubbo
        port: 10087
        serialization: kryo
      registry:
        id: zookeeper-metadictProd
        address: zookeeper://cloudquery-zookeeper:2181
      consumer:
        timeout: 30000
        group: cloudquery_test1
        check: false
    
    metadict:
      # 定义dm module 路径
      server_home: /opt/cloudquery/dmc/dms_home
      module_directory: /opt/cloudquery/dmc/modules
      stg: /opt/cloudquery/dmc/modules
      task:
        lock:
          #获取任务锁超时时间，秒
          get_task_lock_timeout: 20
          #写索引文件锁超时时间，这个时间要大于create_index/delete_index时间，秒
          write_index_lock_timeout: 300
          #扫描锁超时时间
          scan_sync_lock_timeout: 60
        #同步扫描任务，寻找未同步任务添加到队列中
        scan_sync_scheduler:
          #表达式
          #0 0 4 * * * 表示每天凌晨4点执行任务。
          #0 0/30 2-4 * * * 表示在每天凌晨2点到4点之间，每隔30分钟执行一次任务，默认配置。
          #0 0 12 ? * WED 表示每周三中午12点执行任务。
          #0 0 3-5 * * * 表示每天凌晨3点到5点之间，每小时执行一次任务。
          #0 15 10 L * ? 表示每个月的最后一天上午10:15分执行任务。
          cron: 0 0/30 2-4 * * *
          #同一连接 60*24*7分钟内(7天) 不进行重复同步，单位分钟
          re_sync_time: 10080
        #数据同步任务
        data_build_scheduler:
          #从项目启动 60 秒后开始第一次，单位毫秒
          initial_delay: 60000
          #每 5 秒检查一次，单位毫秒
          fixed_delay: 5000
          #核心线程数
          core_pool_size: 0
          #最大线程数，每台机器能同时进行多少个任务
          maximum_pool_size: 2
          #线程空闲超时时间，秒
          keep_alive_time: 120
          #分布式选项，如果开启则主机与从机同时同步，不开启则等主机宕机后从机才开始同步
          distributed_enable: true
          #心跳时间，如果超时未设置，则认为宕机，更换机器同步，仅在分布式选项关闭生效
          #时间要大于fixed_delay 10s，默认60s，单位秒
          heart_time_out: 60
        #索引创建任务
        index_build_scheduler:
          #从项目启动 30 秒后开始第一次，单位毫秒
          initial_delay: 30000
          #每 2 秒检查一次，单位毫秒
          fixed_delay: 2000
          #心跳时间，如果超时未设置，则认为宕机，更换机器同步
          #时间要大于fixed_delay 10s，默认60s，单位秒
          heart_time_out: 60
        #运行超时后归类死任务，直接认为失败，秒
        run_timeout:
          #索引，时间要小于write_index_lock_timeout
          create_index: 240
          delete_index: 180
          #同步，以 mysql 1万条数据 为例大概 540 秒，这里默认给的 1 个小时
          incremental_sync: 3600
          full_sync: 3600
          delete_sync: 900
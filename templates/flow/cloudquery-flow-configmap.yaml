apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudquery-flow-configmap
data:
  application.yml: |
    profiles: prod
    server:
      port: 9876
      error:
        include-exception: false
        include-stacktrace: always
    
    file_system:
      data_change: /opt/cloudquery/DataChange
    
    #################################################dubbo的配置#####################################################
    dubbo:
      scan:
        base-packages: cn.bintools.cloudquery.flow
      application:
        id: cloudquery-flow
        name: cloudquery-flow
        qos-port: 33337
        qos-enable: true
        qos-accept-foreign-ip: false
      protocol:
        id: flow
        name: dubbo
        port: 12348
    
      registry:
        id: zookeeper-flowProd
        address: zookeeper://cloudquery-zookeeper:2181
      consumer:
        timeout: 30000
        group: cloudquery_test1
        check: false
    
    spring:
      main:
        allow-circular-references: true
      application:
        name: cloudquery-flow
      cloud:
        zookeeper:
          connect-string: cloudquery-zookeeper:2181
      redis:
        database: 1
        host: cloudquery-redis
        port: 6379
        password: nya6X#uSes@
      datasource:
        jdbc-url: jdbc:postgresql://cloudquery-postgreSQL:5432/postgres
        username: postgres
        password: WVCmFZs841@
        driver-class-name: org.postgresql.Driver
        #    data: classpath:init.sql
        #    sql-script-encoding: utf-8
        #    initialization-mode: ALWAYS
      jpa:
        show-sql: true
        open-in-view: true
        hibernate:
          ddl-auto: update
        properties:
          hibernate:
            enable_lazy_load_no_trans: true
            jdbc:
              lob:
                non_contextual_creation: true
      swagger:
        enable: true
    
      servlet:
        multipart:
          max-file-size: 100MB
          max-request-size: 100MB
    
      activiti:
        db-history-used: true
        history-level: full
        deployment-mode: never-fail # 关闭 SpringAutoDeployment
        database-schema-update: true
        async-executor-activate: true
        datasource:
          jdbc-url: jdbc:postgresql://cloudquery-postgreSQL:5432/postgres?currentSchema=activiti
          username: postgres
          password: WVCmFZs841@
          driver-class-name: org.postgresql.Driver
        #1.flase： 默认值。activiti在启动时，会对比数据库表中保存的版本，如果没有表或者版本不匹配，将抛出异常
        #2.true： activiti会对数据库中所有表进行更新操作。如果表不存在，则自动创建
        #3.create_drop： 在activiti启动时创建表，在关闭时删除表（必须手动关闭引擎，才能删除表）
        #4.drop-create： 在activiti启动时删除原来的旧表，然后在创建新表（不需要手动关闭引擎）
        #  database-schema-update: true
        #检测历史表是否存在
        #  db-history-used: true
        #记录历史等级 可配置的历史级别有none, activity, audit, full
        #  history-level: full
        #校验流程文件，默认校验resources下的processes文件夹里的流程文件
        #  check-process-definitions: true
    
    
    springdoc:
      api-docs:
        enabled: false
      swagger-ui:
        enabled: false
    
    
    #流程三方对接模式
    #flow:
    #  three-way-docking:
    #    pattern: all